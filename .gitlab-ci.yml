image: python:3.9

stages:
  - build
  - test
  - bump_version
  - deploy

# 安装依赖
install_dependencies:
  stage: build
  script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt
  artifacts:
    paths:
      - .venv/

# 运行测试
run_tests:
  stage: test
  script:
    - source .venv/bin/activate
    - pytest --cov=app --cov-report=xml
  coverage: '/coverage: \d+\.\d+/'
  artifacts:
    when: always
    reports:
      junit: test-reports/*.xml
      cobertura: coverage.xml

# 自动更新版本号
bump_version:
  stage: bump_version
  script:
    - pip install bumpversion
    - bumpversion patch  # 或者使用 'minor' 或 'major' 更新版本号
  only:
    - main  # 只在 main 分支上触发
  environment:
    name: development
  artifacts:
    paths:
      - .bumpversion.cfg
      - app/__init__.py
      - Pipfile.lock

# 部署到生产环境
# deploy_to_production:
#   stage: deploy
#   script:
#     - echo "Deploying to production..."
#     - source .venv/bin/activate
#     - flask db upgrade
#     - gunicorn -w 4 -b 0.0.0.0:8000 app:app
#   only:
#     - tags  # 只在创建标签时触发
#   environment:
#     name: production
#     url: https://your-productionbbbbb-url.com
#   when: manual  # 手动触发部署